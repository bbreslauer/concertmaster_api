<?
  include_once ("../../../lib/inc.php");
  global $forbidden_labels, $historical_labels;

  // try to find the work in the database

  $work = mysqlfetch ($mysql, "select namesearch, epoch, genre, composer_id as composer, composer.name, composer.complete_name, title, ifnull (lower(searchtitle),lower(title)) searchtitle, lower(alternatetitles) alternatetitles, work.id from work, composer where work.id = {$_REQUEST["id"]} and composer.id=work.composer_id");
 
  if (!$work)
  {
    // if the work doesn't exist, return an error

    $apireturn["status"] = Array ("success"=>"false", "error"=>"Work not found");
  }
  else
  {
    // work exists

    if ($work[0]["searchtitle"] == strtolower ($work[0]["title"]))
    {
      $work[0]["searchtitle"] = worksimplifier ($work[0]["title"]);
    }

    $apireturn["work"] = Array
      (
        "composer"=>Array
          (
            "id"=>$work[0]["composer"],
            "name"=>$work[0]["name"],
            "epoch"=>$work[0]["epoch"]
          ),
         "id"=>$_REQUEST["id"],
         "title"=>$work[0]["title"],
         "searchtitle"=>$work[0]["searchtitle"],
         "genre"=>$work[0]["genre"]
      );

    $apireturn["status"]["source"] = "ext";

    // searching spotify

    $wid = $work[0]["id"];
    $ii = -1;

    $spot = fetchspotify ($work, "albums", $_REQUEST["offset"]);

    // adding extradata to spotify results

    $spot = extradata ($spot, Array ("wid"=>$_REQUEST["id"]));

    // preparing data 

    $spotres = $spot["items"];

    foreach ($spotres as $kalb => $salb)
    {
      $ii = $ii + 1;
      $alb = end($salb);

      $return[$ii] = Array
        (
          "year" => explode ("-", $alb["year"])[0],
          "cover" => $alb["spotify_imgurl"],
          "spotify_albumid" => $alb["spotify_albumid"],
          "singletrack" => ($alb["tracks"] > 1) ? "false" : "true",
          "compilation" => $alb["compilation"] ? "true" : "false",
          "performers" => ($alb["extraperformers"]) ? $alb["extraperformers"] : $alb["performers"],
          "set" => ($alb["subset"]) ? $alb["subset"] : 1,
          "historic" => $alb["historic"] ? "true" : "false",
          "verified" => $alb["verified"] ? "true" : "false",
          "recommended" => $alb["recommended"] ? "true" : "false"
        );

        if ($alb["verified"])
        {
          $vreturn[$ii] = $return[$ii];
          unset ($return[$ii]);
        }
    }

    $apireturn["recordings"] = (sizeof ($vreturn) ? array_merge ($vreturn, $return) : $return);
    
    if ($spot["extras"]["next"]) 
    {
      parse_str (parse_url ($spot["extras"]["next"])["query"], $next);
      $apireturn["next"] = $next["offset"];
    }

    // compilation detection

    if (isset ($apireturn["recordings"]))
    {
      $apireturn["status"] = Array ("success"=>"true", "stats"=> $spot["stats"]);
      $apireturn = compilationdigest ($apireturn);
    }
    else
    {
      $apireturn["status"] = Array ("success"=>"false", "error"=>"No recordings found", "stats"=> $spot["stats"]);
      unset ($apireturn["recordings"]);
    }
  }

  echo savecache ("/recording/list/work/{$_REQUEST["id"]}/{$_REQUEST["offset"]}.json", apireturn ($apireturn));
