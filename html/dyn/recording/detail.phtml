<?
  include_once ("../../../lib/inc.php");
  global $forbidden_labels, $historical_labels, $timesteps;

  // try to find the recording

  $recording = mysqlfetch ($mysql, "select upc, singletrack as compilation, spotify_albumid, work.id as work, work.genre, composer.epoch, composer.id as composer, composer.name, work.title, work.genre, ifnull (searchtitle,title) searchtitle, recording.id, label, date_format (recording.year, '%Y') as year, spotify_imgurl, performer, role from recording, recording_performer, composer, work where composer.id = composer_id and work.id = work_id and recording.id = {$_REQUEST["id"]} and recording_id = recording.id order by recording.id asc");

  if (!$recording)
  {
    // if the recording doesn't exist, return an error

    $apireturn["status"] = Array ("success"=>"false", "error"=>"Recording not found");
  }
  else
  {
    if ($recording[0]["searchtitle"] == $recording[0]["title"])
    {
      $recording[0]["searchtitle"] = worksimplifier ($recording[0]["title"]);
    }

    // recording exists, try to find tracks and spotify details in the database

    $apireturn["status"] = Array ("success"=>"true");
    $apireturn["work"] = Array
      (
        "composer"=>Array
          (
            "id"=>$recording[0]["composer"],
            "name"=>$recording[0]["name"],
            "epoch"=>$recording[0]["epoch"]
          ),
         "id"=>$recording[0]["work"],
         "title"=>$recording[0]["title"],
         "searchtitle"=>$recording[0]["searchtitle"],
         "genre"=>$recording[0]["genre"],
      );
    $apireturn["recording"] = Array
      (
         "id"=>$_REQUEST["id"],
         "label"=>$recording[0]["label"],
         "year"=>$recording[0]["year"],
         "upc"=>$recording[0]["upc"],
         "cover" => $recording[0]["spotify_imgurl"],
         "spotify_albumid"=>$recording[0]["spotify_albumid"],
         "spotify_tracks"=>Array (),
         "performers"=>Array (),
         "tracks"=>Array (),
         "compilation"=>$recording[0]["compilation"],
         "historical" => (in_array ($recording[0]["label"], $historical_labels)) ? "true" : "false",
      );

    foreach ($recording as $rec)
    {
      $apireturn["recording"]["performers"][] = Array
        (
          "name" => $rec["performer"],
          "role" => $rec["role"]
        );
    }

    $tracks = mysqlfetch ($mysql, "select title, position, length, spotify_trackid from track where recording_id = {$_REQUEST["id"]} order by cd asc, position asc");

    if (!$tracks)
    {
      // not found on the database

      $apireturn["status"] = Array ("success"=>"false", "error"=>"Tracks not found");
    }
    else
    {
      // it's all on the db

      $apireturn["status"]["source"] = "db";
      $apireturn["recording"]["length"] = 0;

      foreach ($tracks as $track)
      {
        $apireturn["recording"]["tracks"][] = $track;
        $apireturn["recording"]["length"] += $track["length"];
      }
    }
  }

  // setting auxiliary trackset

  if (isset ($apireturn["recording"]["tracks"]) && $apireturn["recording"]["spotify_albumid"])
  {
    foreach ($apireturn["recording"]["tracks"] as $trid => $track)
    {
      $apireturn["recording"]["spotify_tracks"][] = "spotify:track:". $apireturn["recording"]["tracks"][$trid]["spotify_trackid"];
    }
  }

  echo savecache ("/recording/detail/{$_REQUEST["id"]}.json", apireturn ($apireturn));