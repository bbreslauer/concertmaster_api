<?
  include_once ("../../../lib/inc.php");
  global $forbidden_labels, $historical_labels, $timesteps;

  // try to find the work

  $work = mysqlfetch ($mysql, "select namesearch, epoch, genre, composer_id as composer, composer.name, composer.complete_name, title, ifnull (lower(searchtitle),lower(title)) searchtitle, lower(alternatetitles) alternatetitles, work.id from work, composer where work.id = {$_REQUEST["wid"]} and composer.id=work.composer_id");
  
  if (!$work)
  {
    // if work doesn't exist, return an error

    $apireturn["status"] = Array ("success"=>"false", "error"=>"Work not found");
  }
  else
  {
    // work exists

    if ($work[0]["searchtitle"] == strtolower ($work[0]["title"]))
    {
      $work[0]["searchtitle"] = worksimplifier ($work[0]["title"]);
    }

    $work[0]["spotify_albumid"] = $_REQUEST["aid"];

    $apireturn["work"] = Array
      (
        "composer"=>Array
          (
            "id"=>$work[0]["composer"],
            "name"=>$work[0]["name"],
            "epoch"=>$work[0]["epoch"]
          ),
         "id"=>$_REQUEST["wid"],
         "title"=>$work[0]["title"],
         "searchtitle"=>$work[0]["searchtitle"],
         "genre"=>$work[0]["genre"],
      );
    
    $apireturn["recording"] = Array
      (
         "spotify_albumid"=>$_REQUEST["aid"],
         "spotify_tracks"=>Array (),
         "performers"=>Array (),
         "tracks"=>Array (),
      );

    // fetching data from spotify

    $apireturn["recording"]["length"] = 0;
    $apireturn["status"] = Array ("success"=>"true", "source"=>"ext");

    $spot = fetchspotify ($work, "tracks");

    // adding extradata to spotify results

    $spot = extradata ($spot, Array ("wid"=>$_REQUEST["wid"], "aid"=>$_REQUEST["aid"], "set"=>$_REQUEST["set"]));

    $spotres = $spot["items"];
    $apireturn["status"]["stats"] = $spot["stats"];

    foreach ($spotres as $tart)
    {
      $trinsert[] = Array
      (
        "cd" => $tart["cd"],
        "position" => $tart["position"],
        "length" => $tart["length"],
        "title" => $tart["title"],
        "spotify_trackid" => $tart["spotify_trackid"]
      );

      $apireturn["recording"]["tracks"][] = end ($trinsert);
      $apireturn["recording"]["length"] += end($trinsert)["length"];
    }

    $apireturn["recording"]["cover"] = $spot["extras"]["cover"];
    $apireturn["recording"]["set"] = $_REQUEST["set"];
    $apireturn["recording"]["year"] = explode ("-", $spot["extras"]["year"])[0];
    $apireturn["recording"]["markets"] = $spot["extras"]["markets"];
    $apireturn["recording"]["label"] = $spot["extras"]["label"];
    $apireturn["recording"]["performers"] = (end($spotres)["extraperformers"]) ? end($spotres)["extraperformers"]: end($spotres)["performers"];
  }

  // setting auxiliary trackset

  if (isset ($apireturn["recording"]["tracks"]) && $apireturn["recording"]["spotify_albumid"])
  {
    foreach ($apireturn["recording"]["tracks"] as $trid => $track)
    {
      $apireturn["recording"]["spotify_tracks"][] = "spotify:track:". $apireturn["recording"]["tracks"][$trid]["spotify_trackid"];
    }
  }

  echo savecache ("/recording/detail/work/{$_REQUEST["wid"]}/album/{$_REQUEST["aid"]}/{$_REQUEST["set"]}.json", apireturn ($apireturn));