<?
  include_once ("../../../lib/inc.php");

  $apireturn["request"]["type"] = "genre";
  $apireturn["request"]["item"] = $_REQUEST["genre"];

  // treating where clauses: genre and search

  if ($_REQUEST["genre"])
  {
    if ($_REQUEST["genre"] != "all")
    {
      $where = "and genre = '{$_REQUEST["genre"]}'";
    }
  }

  if ($_REQUEST["search"])
  {
    if (strlen ($_REQUEST["search"]) > 3)
    {
      $where .= "and match (title, subtitle) against ('{$_REQUEST["search"]}*' IN BOOLEAN MODE)";
    }
    else
    {
      $goquery = false;
      $apireturn["status"] = Array ("success"=>"false", "error"=>"Too short search term");
    }
  }

  // listing works

  $sql = "select title, ifnull(subtitle,'') subtitle, work.id as id, genre, composer.epoch, composer.id as composer, composer.name from composer, work where work.composer_id = composer.id and composer.id = '{$_REQUEST["composer"]}' $where order by title asc";
  $works = mysqlfetch ($mysql, $sql);

  if (!$works)
  {
    // if no composers exist, return an error

    $apireturn["status"] = Array ("success"=>"false", "error"=>"No works found");
  }
  else
  {
    // there are composers, go list'em

    $apireturn["status"] = Array ("success"=>"true", "source"=>"db");
    $apireturn["composer"] = Array
      (
        "id"=>$works[0]["composer"],
        "name"=>$works[0]["name"],
        "epoch"=>$works[0]["epoch"]
      );
    $apireturn["works"] = arraydelete ($works, ["composer", "name", "epoch"]);
    $apireturn["status"]["rows"] = sizeof ($apireturn["works"]);
  }

  if ($_REQUEST["search"])
  {
    echo savecache ("/work/list/composer/{$_REQUEST["composer"]}/genre/{$_REQUEST["genre"]}/search/{$_REQUEST["search"]}.json", apireturn ($apireturn));
  }
  else
  {
    echo savecache ("/work/list/composer/{$_REQUEST["composer"]}/{$_REQUEST["genre"]}.json", apireturn ($apireturn));
  }
  
